<!-- 消控室  -->
<template>
  <div class="storied-suilding-wrapper">
    <div>
      <el-form
        label-position="left"
        inline
        :model="formInline"
        ref="formInline"
        class="demo-table-expand"
      >
        <el-form-item label="楼栋名称:" prop="buildId">
          <el-select
            v-model.trim="formInline.buildId"
            placeholder="请选择"
            filterable
            @change="getFloorInfo(formInline.buildId)"
          >
            <el-option
              v-for="item in buildList"
              :key="item.value"
              :label="item.label"
              :value="item.value"
            ></el-option>
          </el-select>
        </el-form-item>
        <el-form-item label="楼层名称:" prop="floorId">
          <el-select v-model.trim="formInline.floorId" filterable placeholder="请选择">
            <el-option
              v-for="item in floorList"
              :key="item.value"
              :label="item.label"
              :value="item.value"
            ></el-option>
          </el-select>
        </el-form-item>
        <el-form-item label="消控室名称:" prop="firecontrolroomName">
          <el-input v-model="formInline.firecontrolroomName"></el-input>
        </el-form-item>
        <el-form-item label="状态:" prop="status">
          <el-select v-model="status" filterable placeholder="请选择">
            <el-option
              v-for="item in stateList"
              :key="item.value"
              :label="item.label"
              :value="item.value"
            ></el-option>
          </el-select>
        </el-form-item>
        <el-form-item label class="t-right" style="width:25%">
          <el-button @click="resetBtn('formInline')">重置</el-button>
          <el-button type="primary" @click="loadData('search')">搜索</el-button>
          <el-button type="success" v-if="facilitiesInData.limtShow" @click="dialogShow">导入</el-button>
          <el-button
            type="warning"
            @click="handleEditPlan('add')"
            v-if="facilitiesInData.limtShow"
            class="mag-right-10"
          >新增</el-button>
        </el-form-item>
      </el-form>
    </div>
    <div class="notab">
      <el-scrollbar>
        <el-table v-loading="isLoading" :data="tableData" stripe>
          <el-table-column align="left" :show-overflow-tooltip="true" prop="buildId" label="楼栋ID"></el-table-column>
          <el-table-column align="left" :show-overflow-tooltip="true" prop="buildName" label="楼栋名称"></el-table-column>
          <el-table-column align="left" :show-overflow-tooltip="true" prop="floorId" label="楼层ID"></el-table-column>
          <el-table-column align="left" :show-overflow-tooltip="true" prop="floorName" label="楼层名称"></el-table-column>

          <el-table-column
            align="left"
            :show-overflow-tooltip="true"
            prop="firecontrolroomName"
            label="消控室名称"
          ></el-table-column>
          <el-table-column align="left" :show-overflow-tooltip="true" prop="stateName" label="状态"></el-table-column>
          <el-table-column align="center" label="操作">
            <template slot-scope="scope">
              <el-button
                type="text"
                @click="handleEditPlan('edit',scope.row)"
                v-if="facilitiesInData.limtShow"
              >编辑</el-button>
              <el-button type="text" @click="handleEditPlan('view',scope.row)">查看</el-button>
              <el-button
                type="text"
                @click="handleEditPlan('delete',scope.row)"
                v-if="facilitiesInData.limtShow"
                :disabled="scope.row.status=='0' ? false : true"
              >停用</el-button>
            </template>
          </el-table-column>
        </el-table>
      </el-scrollbar>
      <Pagination :widgetInfo="widgetInfo" v-on:sonHandleCurrentChange="sonHandleCurrentChange" />
    </div>
    <el-dialog
      :title="optTitle"
      :visible.sync="dialogFormVisible"
      :before-close="handleCancel"
      width="960px"
    >
      <div style="height:400px;overflow-x: hidden;overflow-y: auto;">
        <el-form
          :model="plan"
          :rules="rules"
          ref="plan"
          label-position="left"
          inline
          class="demo-table-expand dialog-expand"
        >
          <el-form-item label="楼栋:" prop="buildId">
            <el-select
              :disabled="inputDisabled"
              v-model.trim="plan.buildId"
              placeholder="楼栋信息"
              filterable
              @change="getFloorInfo"
            >
              <el-option
                v-for="item in buildList"
                :key="item.value"
                :label="item.label"
                :value="item.value"
              ></el-option>
            </el-select>
          </el-form-item>
          <el-form-item label="楼层:" prop="floorId">
            <el-select
              :disabled="inputDisabled"
              v-model="plan.floorId"
              placeholder="楼层信息"
              filterable
            >
              <el-option
                v-for="item in floorList"
                :key="item.value"
                :label="item.label"
                :value="item.value"
              ></el-option>
            </el-select>
          </el-form-item>

          <el-form-item label="消防控制室名称:" prop="firecontrolroomName" :label-width="formLabelWidth">
            <el-input
              :disabled="inputDisabled"
              v-model="plan.firecontrolroomName"
              auto-complete="off"
            ></el-input>
          </el-form-item>
          <el-form-item
            label="消防控制室地址:"
            prop="firecontrolroomAddress"
            :label-width="formLabelWidth"
          >
            <el-input
              :disabled="inputDisabled"
              v-model="plan.firecontrolroomAddress"
              auto-complete="off"
            ></el-input>
          </el-form-item>
          <el-form-item label="消防控制室电话:" prop="firecontrolroomTel" :label-width="formLabelWidth">
            <el-input
              :disabled="inputDisabled"
              v-model="plan.firecontrolroomTel"
              auto-complete="off"
            ></el-input>
          </el-form-item>
          <el-form-item label="备注:" prop="remark" :label-width="formLabelWidth">
            <el-input :disabled="inputDisabled" v-model="plan.remark" auto-complete="off"></el-input>
          </el-form-item>
        </el-form>
        <div v-if="showSaveOrUpdate" slot="footer" class="dialog-footer" style="float: right;">
          <el-button @click="cancel('plan')">取 消</el-button>
          <el-button type="primary" @click="saveOrUpdateForm('plan')">确 定</el-button>
        </div>
      </div>
    </el-dialog>
    <el-dialog
      title="上传"
      :visible.sync="dialogExcelVisible"
      @close="closeDialog"
      :close-on-click-modal="false"
      width="500px"
    >
      <div class="daoru-wrapper">
        <import-upload ref="myChild" v-on:importHandel="setImport" v-bind:uploadVal="uploadVal"></import-upload>
      </div>
    </el-dialog>
  </div>
</template>
<script>
import api from "~/config/http";
import Pagination from "~/components/Pagination";
import importUpload from "~/components/upload/importUpload";
export default {
  name: "ControlRoom",
  props: ["facilitiesInData"],
  components: {
    Pagination,
    importUpload
  },
  data() {
    return {
      buildList: [
        //{ value: "", label: "全部" }
      ], //楼栋
      floorList: [
        //{ value: "", label: "全部" }
      ], //楼层
      widgetInfo: {
        total: null,
        pageSize: 10,
        pageNo: 1
      },
      formInline: {
        //查询表单
        buildId: "",
        buildName: "",
        floorId: "",
        floorName: "",
        firecontrolroomName: ""
      },
      tableData: [],
      isLoading: false,
      dialogFormVisible: false,
      plan: {
        id: "",
        unitId: "",
        firecontrolroomName: "",
        remark: "",
        status: "0",
        firecontrolroomAddress: "",
        firecontrolroomTel: "",
        buildId: "",
        buildName: "",
        floorId: "",
        floorName: ""
      },
      formLabelWidth: "",
      optTitle: null,
      inputDisabled: false,
      showSaveOrUpdate: false,
      optMode: null,
      dialogExcelVisible: false,
      uploadVal: {},
      rules: {
        buildId: [
          { required: true, message: "请输入企业楼栋", trigger: "focus" }
        ],
        floorId: [{ required: true, message: "请输入楼层", trigger: "focus" }],
        firecontrolroomName: [
          { required: true, message: "请输入消控室名称", trigger: "blur" }
        ],
        firecontrolroomAddress: [
          { required: true, message: "请输入消防控制室地址", trigger: "blur" }
        ],
        firecontrolroomTel: [
          { required: true, message: "请输入消防控制室电话", trigger: "blur" }
        ]
      },
      status: "0",
      stateList: [
        { value: "", label: "全部" },
        { value: "0", label: "在用" },
        { value: "1", label: "停用" }
      ]
    };
  },

  mounted() {
    this.findBuildByUnitId();
  },
  methods: {
    closeDialog() {
      //调用子组件方法
      this.$refs.myChild.ResetOrCloseBtn();
    },
    //导入
    dialogShow() {
      this.dialogExcelVisible = true;
      this.uploadVal = {
        fileId: this.facilitiesInData.id,
        unitId: this.facilitiesInData.unitId,
        operationOrgId: this.facilitiesInData.subCenterCode,
        TabName: "消控室"
      };
    },
    //上传
    setImport(d) {
      this.dialogExcelVisible = false;
      this.loadData();
    },
    resetBtn(formName) {
      this.$refs[formName].resetFields();
      this.status = "0";
      this.loadData();
    },
    //查询单位下面的楼栋信息
    findBuildByUnitId() {
      api
        .post("/remoteApi/tool/build/findBuildByUnitId", {
          unitId: this.facilitiesInData.unitId
        })
        .then(res => {
          if (res && res.code === "success") {
            var list = res.data;
            for (var key in list) {
              var temp = {};
              temp.value = list[key].buildId;
              temp.label = list[key].buildName;
              this.buildList.push(temp);
            }
          } else {
            console.log("没有数据");
          }
        })
        .catch(err => {
          this.$message({
            type: "warning",
            message: "加载超时,请重新加载!"
          });
        });
    },
    //联动楼层信息
    getFloorInfo(buildId, cb) {
      // this.plan.buildName = this.buildList.find(item => {
      //   return item.buildId === buildId;
      // }).buildName;
      //this.floorList = [{ value: "", label: "全部" }];
      this.floorList = [];
      this.floorList = [];
      this.formInline.floorId = null;
      this.plan.floorId = null;
      this.isLoading = true;
      api
        .post("/remoteApi/tool/floor/getFloorInfoByUnitIdAndBuildId", {
          unitId: this.facilitiesInData.unitId,
          buildId: buildId
        })
        .then(res => {
          this.isLoading = false;
          if (res && res.code === "success") {
            var list = res.data;
            for (var key in list) {
              var temp = {};
              temp.value = list[key].floorId;
              temp.label = list[key].floorName;
              this.floorList.push(temp);
            }
            if (cb) {
              cb = cb();
            }
          } else {
            console.log("没有数据");
          }
        })
        .catch(err => {
          this.isLoading = false;
          this.$message({
            type: "warning",
            message: "加载超时,请重新加载!"
          });
        });
    },
    //获取楼层名称
    // getFloorInfoName(floorId) {
    //   this.plan.floorName = this.floorList.find(item => {
    //     return item.floorId === floorId;
    //   }).floorName;
    // },
    loadData(pagenoFlag) {
      this.isLoading = true;
      api
        .post(
          "/remoteApi/tool/firecontrolroom/findRecordEnterpriseFirecontrolroomList",
          {
            unitId: this.facilitiesInData.unitId,
            buildId: this.formInline.buildId,
            buildName: this.formInline.buildName,
            floorId: this.formInline.floorId,
            floorName: this.formInline.floorName,
            firecontrolroomName: this.formInline.firecontrolroomName,
            status: this.status,
            pageNo: pagenoFlag == "search" ? "1" : this.widgetInfo.pageNo,
            pageSize: this.widgetInfo.pageSize
          }
        )
        .then(res => {
          this.isLoading = false;
          if (res && res.code === "success") {
            this.tableData = res.data.rows;
            this.widgetInfo.total =
              res.data.total === null ? 0 : res.data.total;
            this.tableData.forEach(item => {
              item.stateName = this.stateList.find(
                stateItem => stateItem.value == item.status
              ).label;
            });
          } else {
            this.tableData = [];
            this.widgetInfo.list = res.data.rows;
            this.widgetInfo.total = 0;
            console.log("没有数据");
          }
        })
        .catch(err => {
          this.isLoading = false;
          this.$message({
            type: "warning",
            message: "加载超时,请重新加载!"
          });
        });
    },
    // 分页
    sonHandleCurrentChange(widgetInfo) {
      let that = this;
      this.widgetInfo.pageSize = widgetInfo.pageSize
        ? parseInt(widgetInfo.pageSize)
        : this.widgetInfo.pageSize;
      this.widgetInfo.pageNo = widgetInfo.pageNo
        ? parseInt(widgetInfo.pageNo)
        : this.widgetInfo.pageNo;
      that.loadData();
    },
    handleEditPlan(method, planObj) {
      this.dialogFormVisible = true;
      this.optMode = method;
      if ("add" == method) {
        //新增
        this.optTitle = "新增";
        this.plan.id = "";
        this.plan.floorId = "";
        this.plan.cretedBy = api.getGlobalVal("userObj").id;
        this.inputDisabled = false;
        this.showSaveOrUpdate = true;
        console.log(this.showSaveOrUpdate);
      } else if ("edit" == method) {
        //编辑
        this.optTitle = "编辑";
        this.inputDisabled = false;
        this.showSaveOrUpdate = true;
        this.getFloorInfo(planObj.buildId, () => {
          this.plan = Object.assign({}, planObj);
          this.plan.cretedBy = api.getGlobalVal("userObj").id;
          this.plan.trialId = this.facilitiesInData.id;
          this.inputDisabled = false;
          this.showSaveOrUpdate = true;
        });
      } else if ("delete" == method) {
        //删除
        this.dialogFormVisible = false;
        this.deleteHandle(planObj);
      } else {
        //查看
        this.optTitle = "查看";
        this.getFloorInfo(planObj.buildId, () => {
          this.plan = Object.assign(this.plan, planObj);
          this.plan.cretedBy = api.getGlobalVal("userObj").id;
          this.inputDisabled = true;
          this.showSaveOrUpdate = false;
        });
      }
    },
    //搜索
    search() {
      this.loadData();
    },
    saveOrUpdateForm(formName) {
      //保存或更新操作
      var that = this;

      this.$refs[formName].validate(valid => {
        if (valid) {
          if ("add" == that.optMode) {
            that.plan.cretedBy = api.getGlobalVal("userObj").id;
            that.plan.unitId = this.facilitiesInData.unitId;
            that.plan.trialId = this.facilitiesInData.id;
            that.isLoading = true;
            api
              .post(
                "/remoteApi/tool/firecontrolroom/addRecordEnterpriseFirecontrolroomInfo",
                that.plan
              )
              .then(res => {
                that.isLoading = false;
                if (res && res.code === "success") {
                  that.widgetInfo.pageNo = 1;
                  that.cancel("plan");
                  that.loadData();
                  that.$message({
                    message: "保存成功",
                    type: "success"
                  });
                } else {
                  that.$message({
                    message: "保存失败",
                    type: "error"
                  });
                }
              })
              .catch(err => {
                console.log(err);
                that.isLoading = false;
              });
          } else if ("edit" == that.optMode) {
            that.plan.cretedBy = api.getGlobalVal("userObj").id;
            that.isLoading = true;
            api
              .post(
                "/remoteApi/tool/firecontrolroom/updateRecordEnterpriseFirecontrolroomInfo",
                that.plan
              )
              .then(res => {
                that.isLoading = false;
                if (res && res.code === "success") {
                  that.$message({
                    message: "更新成功",
                    type: "success"
                  });
                  that.widgetInfo.pageNo = 1;
                  that.cancel("plan");
                  that.loadData();
                } else {
                  that.$message({
                    message: "更新失败",
                    type: "error"
                  });
                }
              })
              .catch(err => {
                console.log(err);
                that.isLoading = false;
              });
          } else {
            console.log("异常保存或更新模式");
          }
          this.dialogFormVisible = false;
        } else {
          console.log("error submit!!");
          return false;
        }
      });
    },
    deleteHandle(planObj) {
      //删除
      var that = this;
      that.plan = JSON.parse(JSON.stringify(planObj));
      that
        .$confirm("确定要停用吗?", "提示", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning"
        })
        .then(() => {
          that.isLoading = true;
          api
            .post(
              "/remoteApi/tool/firecontrolroom/deleteRecordEnterpriseFirecontrolroomInfo",
              {
                id: that.plan.id,
                cretedBy: api.getGlobalVal("userObj").id,
                trialId: that.facilitiesInData.id
              }
            )
            .then(res => {
              that.isLoading = false;
              if (res && res.code === "success") {
                that.$message({
                  message: "已停用",
                  type: "success"
                });
                that.loadData();
                that.plan = {};
              } else {
                that.$message({
                  message: "停用异常",
                  type: "error"
                });
              }
            })
            .catch(err => {
              console.log(err);
              that.isLoading = false;
            });
        })
        .catch(() => {
          that.plan = {};
        });
    },
    cancel(formName) {
      let that = this;
      that.dialogFormVisible = false;
      that.$refs[formName].resetFields();
      that.plan.id = "";
    },
    handleCancel() {
      this.cancel("plan");
    }
  }
};
</script>
<style lang="scss" scoped>
@import "~/assets/css/editArchivesPoint.scss";
/deep/.demo-table-expand {
  .el-form-item {
    width: 20% !important;
  }
  &.dialog-expand {
    .el-form-item {
      width: 25% !important;
    }
    label {
      width: 100% !important;
    }
  }
}
</style>
