<template>
  <div class="storied-suilding-wrapper">
    <div>
      <el-form
        label-position="left"
        inline
        :model="formInline"
        ref="formInline"
        class="demo-table-expand"
      >
        <el-form-item label="楼栋:" prop="buildId">
          <el-select v-model.trim="formInline.buildId" placeholder="楼栋信息">
            <el-option
              v-for="item in buildList"
              :key="item.buildId"
              :label="item.buildName"
              :value="item.buildId"
            ></el-option>
          </el-select>
        </el-form-item>
        <el-form-item label="视频地址:" prop="videoAddress">
          <el-input v-model="formInline.videoAddress"></el-input>
        </el-form-item>
        <el-form-item class="t-right" style="width:50%">
          <el-button @click="resetBtn('formInline')">重置</el-button>
          <el-button type="primary" @click="loadData">搜索</el-button>
          <el-button type="success" v-if="facilitiesInData.limtShow" @click="dialogShow">导入</el-button>
          <el-button
            type="warning"
            v-if="facilitiesInData.limtShow"
            @click="handleEditPlan('add')"
            class="mag-right-10"
          >新增</el-button>
        </el-form-item>
      </el-form>
    </div>
    <div class="notab">
      <el-scrollbar>
        <el-table v-loading="isLoading" :data="tableData" stripe>
          <el-table-column
            align="left"
            min-width="15%"
            :show-overflow-tooltip="true"
            prop="videoAddress"
            label="视频地址"
          ></el-table-column>
          <el-table-column
            align="left"
            min-width="15%"
            :show-overflow-tooltip="true"
            prop="videoPath"
            label="视频路径"
          ></el-table-column>
          <el-table-column
            align="left"
            min-width="15%"
            :show-overflow-tooltip="true"
            prop="videoCode"
            label="视频编码"
          ></el-table-column>
          <el-table-column
            align="left"
            min-width="15%"
            :show-overflow-tooltip="true"
            prop="buildId"
            label="楼栋ID"
          ></el-table-column>
          <el-table-column
            align="left"
            min-width="15%"
            :show-overflow-tooltip="true"
            prop="buildName"
            label="楼栋名称"
          ></el-table-column>
          <el-table-column
            align="left"
            min-width="15%"
            :show-overflow-tooltip="true"
            prop="longitude"
            label="经度"
          ></el-table-column>
          <el-table-column
            align="left"
            min-width="15%"
            :show-overflow-tooltip="true"
            prop="latitude"
            label="纬度"
          ></el-table-column>
          <el-table-column align="center" min-width="25%" label="操作">
            <template slot-scope="scope">
              <el-button
                type="text"
                @click="handleEditPlan('edit',scope.row)"
                v-if="facilitiesInData.limtShow"
              >编辑</el-button>
              <el-button type="text" @click="handleEditPlan('view',scope.row)">查看</el-button>
              <el-button
                type="text"
                @click="handleEditPlan('delete',scope.row)"
                v-if="facilitiesInData.limtShow"
              >删除</el-button>
              <!--              <el-tooltip content="编辑" placement="bottom">-->
              <!--                <el-button-->
              <!--                  v-if="facilitiesInData.limtShow"-->
              <!--                  type="text"-->
              <!--                  icon="icon-l-new ggicon-modification"-->
              <!--                  style="font-size: 16px"-->
              <!--                  @click="handleEditPlan('edit',scope.row)"-->
              <!--                ></el-button>-->
              <!--              </el-tooltip>-->
              <!--              <el-tooltip content="查看" placement="bottom">-->
              <!--                <el-button-->
              <!--                  type="text"-->
              <!--                  icon="icon-l-new el-icon-view"-->
              <!--                  style="font-size: 16px"-->
              <!--                  @click="handleEditPlan('view',scope.row)"-->
              <!--                ></el-button>-->
              <!--              </el-tooltip>-->
              <!--              <el-tooltip content="删除" placement="bottom">-->
              <!--                <el-button-->
              <!--                  v-if="facilitiesInData.limtShow"-->
              <!--                  type="text"-->
              <!--                  icon="icon-l-new el-icon-delete-solid"-->
              <!--                  style="font-size: 16px"-->
              <!--                  @click="handleEditPlan('delete',scope.row)"-->
              <!--                ></el-button>-->
              <!--              </el-tooltip>-->
            </template>
          </el-table-column>
        </el-table>
      </el-scrollbar>
      <Pagination :widgetInfo="widgetInfo" v-on:sonHandleCurrentChange="sonHandleCurrentChange"/>
    </div>
    <el-dialog :title="optTitle" :visible.sync="dialogFormVisible">
      <div style="height:400px;overflow-x: hidden;overflow-y: auto;">
        <el-form :model="plan" label-position="left" inline class="demo-table-expand dialog-expand">
          <el-form-item label="楼栋:">
            <el-select
              :disabled="inputDisabled"
              v-model.trim="plan.buildId"
              placeholder="楼栋信息"
              @change="getBuildName"
            >
              <el-option
                v-for="item in buildList"
                :key="item.buildId"
                :label="item.buildName"
                :value="item.buildId"
              ></el-option>
            </el-select>
          </el-form-item>
          <el-form-item label="视频地址:" :label-width="formLabelWidth">
            <el-input :disabled="inputDisabled" v-model="plan.videoAddress" auto-complete="off"></el-input>
          </el-form-item>
          <el-form-item label="视频路径:" :label-width="formLabelWidth">
            <el-input :disabled="inputDisabled" v-model="plan.videoPath" auto-complete="off"></el-input>
          </el-form-item>
          <el-form-item label="视频编码:" :label-width="formLabelWidth">
            <el-input :disabled="inputDisabled" v-model="plan.videoCode" auto-complete="off"></el-input>
          </el-form-item>
          <el-form-item label="经度:" :label-width="formLabelWidth">
            <el-input :disabled="inputDisabled" v-model="plan.longitude" auto-complete="off"></el-input>
          </el-form-item>
          <el-form-item label="维度:" :label-width="formLabelWidth">
            <el-input :disabled="inputDisabled" v-model="plan.latitude" auto-complete="off"></el-input>
          </el-form-item>
        </el-form>
        <div v-if="showSaveOrUpdate" slot="footer" class="dialog-footer" style="float: right;">
          <el-button @click="dialogFormVisible = false">取 消</el-button>
          <el-button type="primary" @click="saveOrUpdateForm">确 定</el-button>
        </div>
      </div>
    </el-dialog>
    <el-dialog title="上传" @close="closeDialog" :visible.sync="dialogExcelVisible" width="500px">
      <div class="daoru-wrapper">
        <import-upload v-on:importHandel="setImport()" v-bind:uploadVal="uploadVal"></import-upload>
      </div>
    </el-dialog>
  </div>
</template>
<script>
import api from "~/config/http";
import Pagination from "~/components/Pagination";
import importUpload from "~/components/upload/importUpload";
export default {
  name: "Floor",
  components: {
    Pagination,
    importUpload
  },
  props: ["facilitiesInData"],
  data() {
    return {
      buildList: [], //楼栋
      formInline: {
        buildId: null,
        videoAddress: null
      },
      stateList: [{ id: 0, name: "在用" }, { id: 1, name: "停用" }],
      buildId: null,
      buildName: null,
      floorId: null,
      floorName: null,
      videoAddress: null,
      widgetInfo: {
        total: null,
        pageSize: 6,
        pageNo: 1
      },
      tableData: [],
      isLoading: false,
      dialogFormVisible: false,
      plan: {},
      searchFormLabelWidth: "95px",
      formLabelWidth: "140px",
      optTitle: null,
      inputDisabled: false,
      showSaveOrUpdate: false,
      optMode: null,
      dialogExcelVisible: false,
      uploadVal: {}
    };
  },
  mounted() {
    this.findBuildByUnitId();
    this.loadData();
  },
  methods: {
    closeDialog() {
      //调用子组件方法
      this.$refs.myChild.ResetOrCloseBtn();
    },
    //导入
    dialogShow() {
      this.dialogExcelVisible = true;
      this.uploadVal = {
        fileId: this.facilitiesInData.id,
        unitId: this.facilitiesInData.unitId,
        operationOrgId: this.facilitiesInData.subCenterCode,
        TabName: "消控室"
      };
    },
    //上传
    setImport(d) {
      console.log(222, d);
      this.dialogExcelVisible = false;
      this.loadData();
    },
    resetBtn(formName) {
      this.$refs[formName].resetFields();
      this.loadData();
    },
    //查询单位下面的楼栋信息
    findBuildByUnitId() {
      this.isLoading = true;
      api
        .post("/remoteApi/tool/build/findBuildByUnitId", {
          unitId: this.facilitiesInData.unitId
        })
        .then(res => {
          this.isLoading = false;
          if (res && res.code === "success") {
            this.buildList = res.data;
          } else {
            console.log("没有数据");
          }
        })
        .catch(err => {
          this.isLoading = false;
          this.$message({
            type: "warning",
            message: "加载超时,请重新加载!"
          });
        });
    },
    //获取楼栋名称
    getBuildName(vId) {
      this.plan.buildName = this.buildList.find(item => {
        return item.buildId === vId;
      }).buildName;
    },
    loadData() {
      this.isLoading = true;
      api
        .post("/remoteApi/tool/video/findRecordEnterpriseVideoList", {
          unitId: this.facilitiesInData.unitId,
          buildId: this.formInline.buildId,
          //buildName: this.buildName,
          // floorId: this.floorId,
          // floorName: this.floorName,
          videoAddress: this.formInline.videoAddress,
          //status:null,
          pageNo: this.widgetInfo.pageNo,
          pageSize: this.widgetInfo.pageSize
        })
        .then(res => {
          this.isLoading = false;
          if (res && res.code === "success") {
            this.tableData = res.data.rows;
            // this.tableData.forEach(item => {
            //   item.stateName = this.stateList.find(
            //     stateItem => stateItem.id == item.status
            //   ).name;
            // });
            this.widgetInfo.total =
              res.data.total === null ? 0 : res.data.total;
          } else {
            this.tableData = [];
            this.widgetInfo.list = res.data.rows;
            this.widgetInfo.total = 0;
            console.log("没有数据");
          }
        });
    },
    // 分页
    sonHandleCurrentChange(widgetInfo) {
      this.widgetInfo.pageSize = widgetInfo.pageSize
        ? parseInt(widgetInfo.pageSize)
        : this.widgetInfo.pageSize;
      this.widgetInfo.pageNo = widgetInfo.pageNo
        ? parseInt(widgetInfo.pageNo)
        : this.widgetInfo.pageNo;
      this.loadData();
    },
    handleEditPlan(method, planObj) {
      this.optMode = method;
      if ("add" == method) {
        //新增
        this.dialogFormVisible = true;
        this.optTitle = "新增";
        this.plan = {};
        this.inputDisabled = false;
        this.showSaveOrUpdate = true;
      } else if ("edit" == method) {
        //编辑
        this.dialogFormVisible = true;
        this.optTitle = "编辑";
        this.plan = JSON.parse(JSON.stringify(planObj));
        this.inputDisabled = false;
        this.showSaveOrUpdate = true;
      } else if ("delete" == method) {
        //删除
        this.deleteHandle(planObj);
      } else {
        //查看
        this.dialogFormVisible = true;
        this.optTitle = "查看";
        this.plan = JSON.parse(JSON.stringify(planObj));
        this.inputDisabled = true;
        this.showSaveOrUpdate = false;
      }
      console.log(this.plan);
    },
    deleteHandle(planObj) {
      //删除
      var that = this;
      that.plan = JSON.parse(JSON.stringify(planObj));
      that
        .$confirm("确定要删除吗?", "提示", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning"
        })
        .then(() => {
          that.isLoading = true;
          api
            .post("/remoteApi/tool/video/deleteRecordEnterpriseVideoInfo", {
              id: that.plan.id,
              cretedBy: api.getGlobalVal("userObj").id,
              trialId: that.facilitiesInData.id
            })
            .then(res => {
              that.isLoading = false;
              if (res && res.code === "success") {
                that.$message({
                  message: "删除成功",
                  type: "success"
                });
                that.loadData();
              } else {
                that.$message({
                  message: "删除失败",
                  type: "error"
                });
              }
            })
            .catch(err => {
              console.log(err);
              that.isLoading = false;
            });
        })
        .catch(() => {});
    },
    saveOrUpdateForm() {
      //保存或更新操作
      var that = this;
      if ("add" == that.optMode) {
        that.plan.cretedBy = api.getGlobalVal("userObj").id;
        that.plan.unitId = this.facilitiesInData.unitId;
        that.plan.trialId = this.facilitiesInData.id;
        that.isLoading = true;
        api
          .post("/remoteApi/tool/video/addRecordEnterpriseVideoInfo", that.plan)
          .then(res => {
            that.isLoading = false;
            if (res && res.code === "success") {
              that.dialogFormVisible = false;
              that.$message({
                message: "保存成功",
                type: "success"
              });
              that.loadData();
            } else {
              that.$message({
                message: "保存失败",
                type: "error"
              });
            }
          })
          .catch(err => {
            console.log(err);
            that.isLoading = false;
          });
      } else if ("edit" == that.optMode) {
        that.plan.cretedBy = api.getGlobalVal("userObj").id;
        that.plan.unitId = this.facilitiesInData.unitId;
        that.plan.trialId = this.facilitiesInData.id;
        that.isLoading = true;
        api
          .post(
            "/remoteApi/tool/video/updateRecordEnterpriseVideoInfo",
            that.plan
          )
          .then(res => {
            that.isLoading = false;
            if (res && res.code === "success") {
              that.dialogFormVisible = false;
              that.$message({
                message: "更新成功",
                type: "success"
              });
              that.loadData();
            } else {
              that.$message({
                message: "更新失败",
                type: "error"
              });
            }
          })
          .catch(err => {
            console.log(err);
            that.isLoading = false;
          });
      } else {
        console.log("异常保存或更新模式");
      }
    }
  }
};
</script>
<style lang="scss" scoped>
@import "~/assets/css/editArchivesPoint.scss";
</style>







