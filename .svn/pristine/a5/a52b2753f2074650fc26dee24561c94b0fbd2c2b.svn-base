<!-- 消控室  -->
<template>
  <div class="storied-suilding-wrapper">
    <div>
      <el-form
        label-position="left"
        inline
        :model="formInline"
        ref="formInline"
        class="demo-table-expand"
      >
        <el-form-item label="楼栋名称:" prop="buildId">
          <el-select
            v-model.trim="formInline.buildId"
            placeholder="全部"
            filterable
            @change="getFloorInfo(formInline.buildId)"
          >
            <el-option
              v-for="item in buildList"
              :key="item.value"
              :label="item.label"
              :value="item.value"
            ></el-option>
          </el-select>
        </el-form-item>

        <el-form-item label="楼层名称:" prop="floorId">
          <el-select v-model.trim="formInline.floorId" filterable placeholder="全部">
            <el-option
              v-for="item in floorList"
              :key="item.value"
              :label="item.label"
              :value="item.value"
            ></el-option>
          </el-select>
        </el-form-item>
        <el-form-item label="人员名称:" prop="personnelName">
          <el-input v-model="formInline.personnelName"></el-input>
        </el-form-item>
        <el-form-item label class="t-right" style="width:25%">
          <el-button @click="resetBtn('formInline')">重置</el-button>
          <el-button type="primary" @click="loadData">搜索</el-button>
          <el-button type="success" v-if="facilitiesInData.limtShow" @click="dialogShow">导入</el-button>
          <el-button
            type="warning"
            @click="handleEditPlan('add')"
            v-if="facilitiesInData.limtShow"
            class="mag-right-10"
          >新增</el-button>
        </el-form-item>
      </el-form>
    </div>
    <div class="notab">
      <el-scrollbar>
        <el-table v-loading="isLoading" :data="tableData" stripe>
          <el-table-column
            align="left"
            min-width="15%"
            :show-overflow-tooltip="true"
            prop="unitId"
            label="企业ID"
          ></el-table-column>
          <el-table-column
            align="left"
            min-width="15%"
            :show-overflow-tooltip="true"
            prop="id"
            label="数据id"
          ></el-table-column>
          <el-table-column
            align="left"
            min-width="15%"
            :show-overflow-tooltip="true"
            prop="buildId"
            label="楼栋ID"
          ></el-table-column>
          <el-table-column
            align="left"
            min-width="15%"
            :show-overflow-tooltip="true"
            prop="floorId"
            label="楼层ID"
          ></el-table-column>
          <el-table-column
            align="left"
            min-width="15%"
            :show-overflow-tooltip="true"
            prop="buildName"
            label="楼栋名称"
          ></el-table-column>
          <el-table-column
            align="left"
            min-width="15%"
            :show-overflow-tooltip="true"
            prop="floorName"
            label="楼层名称"
          ></el-table-column>
          <el-table-column
            align="left"
            min-width="15%"
            :show-overflow-tooltip="true"
            prop="personnelName"
            label="消控室人员姓名"
          ></el-table-column>
          <el-table-column align="center" min-width="18%" label="操作">
            <template slot-scope="scope">
              <el-button
                type="text"
                @click="handleEditPlan('edit',scope.row)"
                v-if="facilitiesInData.limtShow"
              >编辑</el-button>
              <el-button type="text" @click="handleEditPlan('view',scope.row)">查看</el-button>
              <el-button
                type="text"
                @click="handleEditPlan('delete',scope.row)"
                v-if="facilitiesInData.limtShow"
              >删除</el-button>
            </template>
          </el-table-column>
        </el-table>
      </el-scrollbar>
      <Pagination :widgetInfo="widgetInfo" v-on:sonHandleCurrentChange="sonHandleCurrentChange" />
    </div>
    <el-dialog :title="optTitle" :visible.sync="dialogFormVisible">
      <div style="height:400px;overflow-x: hidden;overflow-y: auto;">
        <el-form
          :model="plan"
          :rules="rules"
          ref="plan"
          label-position="left"
          inline
          class="demo-table-expand dialog-expand"
        >
          <el-form-item label="数据ID:" :label-width="formLabelWidth">
            <el-input :disabled="inputDisabled" v-model="plan.id" auto-complete="off"></el-input>
          </el-form-item>
          <el-form-item label="企业ID:" prop="unitId" :label-width="formLabelWidth">
            <el-input :disabled="inputDisabled" v-model="plan.unitId" auto-complete="off"></el-input>
          </el-form-item>
          <el-form-item label="楼栋:" prop="buildId" :label-width="formLabelWidth">
            <el-select
              :disabled="inputDisabled"
              v-model="plan.buildId"
              placeholder="全部"
              filterable
              @change="getFloorInfo"
            >
              <el-option
                v-for="item in buildList"
                :key="item.value"
                :label="item.label"
                :value="item.value"
              ></el-option>
            </el-select>
          </el-form-item>
          <el-form-item label="楼层:" prop="floorId" :label-width="formLabelWidth">
            <el-select
              :disabled="inputDisabled"
              v-model.trim="plan.floorId"
              placeholder="全部"
              filterable
              @change="getFloorInfoName"
            >
              <el-option
                v-for="item in floorList"
                :key="item.value"
                :label="item.label"
                :value="item.value"
              ></el-option>
            </el-select>
          </el-form-item>
          <el-form-item label="消控室人员姓名:" prop="personnelName" :label-width="formLabelWidth">
            <el-input :disabled="inputDisabled" v-model="plan.personnelName" auto-complete="off"></el-input>
          </el-form-item>
          <el-form-item label="消控室人员身份证号码:" :label-width="formLabelWidth">
            <el-input :disabled="inputDisabled" v-model="plan.personnelIdnum" auto-complete="off"></el-input>
          </el-form-item>
          <el-form-item label="消控室人员电话:" prop="personnelTel" :label-width="formLabelWidth">
            <el-input :disabled="inputDisabled" v-model="plan.personnelTel" auto-complete="off"></el-input>
          </el-form-item>
          <el-form-item label="消控室人员资质:" :label-width="formLabelWidth">
            <el-input :disabled="inputDisabled" v-model="plan.qualifications" auto-complete="off"></el-input>
          </el-form-item>
          <el-form-item label="消控室人员证书编号:" prop="certificatenum" :label-width="formLabelWidth">
            <el-input :disabled="inputDisabled" v-model="plan.certificatenum" auto-complete="off"></el-input>
          </el-form-item>
          <el-form-item label="所在消控室具体位置:" :label-width="formLabelWidth">
            <el-input :disabled="inputDisabled" v-model="plan.fcroomSite" auto-complete="off"></el-input>
          </el-form-item>
          <el-form-item label="备注:" :label-width="formLabelWidth">
            <el-input :disabled="inputDisabled" v-model="plan.remark" auto-complete="off"></el-input>
          </el-form-item>
          <el-form-item label="所属消控室ID:" prop="firecontrolroomId" :label-width="formLabelWidth">
            <el-input
              :disabled="inputDisabled"
              v-model="plan.firecontrolroomId"
              auto-complete="off"
            ></el-input>
          </el-form-item>
        </el-form>
        <div v-if="showSaveOrUpdate" slot="footer" class="dialog-footer">
          <el-button @click="dialogFormVisible = false">取 消</el-button>
          <el-button type="primary" @click="saveOrUpdateForm('plan')">确 定</el-button>
        </div>
      </div>
    </el-dialog>
    <el-dialog title="上传" @close="closeDialog" :visible.sync="dialogExcelVisible" width="500px">
      <div class="daoru-wrapper">
        <import-upload v-on:importHandel="setImport()" v-bind:uploadVal="uploadVal"></import-upload>
      </div>
    </el-dialog>
  </div>
</template>
<script>
import api from "~/config/http";
import Pagination from "~/components/Pagination";
import importUpload from "~/components/upload/importUpload";
export default {
  name: "ControlRoom",
  props: ["facilitiesInData"],
  components: {
    Pagination,
    importUpload
  },
  data() {
    return {
      buildList: [{ value: "", label: "全部" }], //楼栋
      floorList: [{ value: "", label: "全部" }], //楼层
      widgetInfo: {
        total: null,
        pageSize: 6,
        pageNo: 1
      },
      unitId: null,
      id: null,
      formInline: {
        //查询表单
        buildId: null,
        buildName: null,
        floorId: null,
        floorName: null,
        personnelName: null
      },
      tableData: [],
      isLoading: false,
      dialogFormVisible: false,
      plan: { floorId: null },
      formLabelWidth: "100%",
      optTitle: null,
      inputDisabled: false,
      showSaveOrUpdate: false,
      optMode: null,
      dialogExcelVisible: false,
      uploadVal: {},
      rules: {
        unitId: [{ required: true, message: "请输入企业ID", trigger: "blur" }],
        buildId: [
          { required: true, message: "请输入企业楼栋", trigger: "blur" }
        ],
        floorId: [{ required: true, message: "请输入楼层", trigger: "blur" }],
        personnelName: [
          { required: true, message: "消控室人员姓名", trigger: "blur" }
        ],
        personnelTel: [
          { required: true, message: "消控室人员电话", trigger: "blur" }
        ],
        certificatenum: [
          { required: true, message: "消控室人员证书编号", trigger: "blur" }
        ],
        firecontrolroomId: [
          { required: true, message: "所属消控室ID", trigger: "blur" }
        ]
      }
    };
  },
  mounted() {
    this.findBuildByUnitId();
  },
  methods: {
    closeDialog() {
      //调用子组件方法
      this.$refs.myChild.ResetOrCloseBtn();
    },
    //导入
    dialogShow() {
      this.dialogExcelVisible = true;
      this.uploadVal = {
        fileId: this.facilitiesInData.id,
        unitId: this.facilitiesInData.unitId,
        operationOrgId: this.facilitiesInData.subCenterCode,
        TabName: "消控室"
      };
    },
    //上传
    setImport(d) {
      console.log(222, d);
      this.dialogExcelVisible = false;
      this.loadData();
    },
    resetBtn(formName) {
      this.$refs[formName].resetFields();
      this.loadData();
    },
    //查询单位下面的楼栋信息
    findBuildByUnitId() {
      this.isLoading = true;
      api
        .post("/remoteApi/tool/build/findBuildByUnitId", {
          unitId: this.facilitiesInData.unitId
        })
        .then(res => {
          this.isLoading = false;
          if (res && res.code === "success") {
            var list = res.data;
            for (var key in list) {
              var temp = {};
              temp.value = list[key].buildId;
              temp.label = list[key].buildName;
              this.buildList.push(temp);
            }
          } else {
            console.log("没有数据");
          }
        })
        .catch(err => {
          this.isLoading = false;
          this.$message({
            type: "warning",
            message: "加载超时,请重新加载!"
          });
        });
    },
    //联动楼层信息
    getFloorInfo(buildId, cb) {
      // this.plan.buildName = this.buildList.find(item => {
      //   return item.buildId === buildId;
      // }).buildName;
      this.floorList = [{ value: "", label: "全部" }];
      this.formInline.floorId = null;
      this.plan.floorId = null;
      this.isLoading = true;
      api
        .post("/remoteApi/tool/floor/getFloorInfoByUnitIdAndBuildId", {
          unitId: this.facilitiesInData.unitId,
          buildId: buildId
        })
        .then(res => {
          this.isLoading = false;
          if (res && res.code === "success") {
            var list = res.data;
            for (var key in list) {
              var temp = {};
              temp.value = list[key].floorId;
              temp.label = list[key].floorName;
              this.floorList.push(temp);
            }
            if (cb) {
              cb = cb();
            }
          } else {
            console.log("没有数据");
          }
        })
        .catch(err => {
          this.isLoading = false;
          this.$message({
            type: "warning",
            message: "加载超时,请重新加载!"
          });
        });
    },
    //获取楼层名称
    // getFloorInfoName(floorId) {
    //   this.plan.floorName = this.floorList.find(item => {
    //     return item.floorId === floorId;
    //   }).floorName;
    // },
    loadData() {
      this.isLoading = true;
      api
        .post("/remoteApi/tool/fcroomper/findRecordEnterpriseFcroomperList", {
          unitId: this.facilitiesInData.unitId,
          buildId: this.formInline.buildId,
          buildName: this.formInline.buildName,
          floorId: this.formInline.floorId,
          floorName: this.formInline.floorName,
          personnelName: this.formInline.personnelName,
          pageNo: this.widgetInfo.pageNo,
          pageSize: this.widgetInfo.pageSize
        })
        .then(res => {
          this.isLoading = false;
          if (res && res.code === "success") {
            this.tableData = res.data.rows;
            this.widgetInfo.total =
              res.data.total === null ? 0 : res.data.total;
          } else {
            this.tableData = [];
            this.widgetInfo.list = res.data.rows;
            this.widgetInfo.total = 0;
            console.log("没有数据");
          }
        })
        .catch(err => {
          this.isLoading = false;
          this.$message({
            type: "warning",
            message: "加载超时,请重新加载!"
          });
        });
    },
    // 分页
    sonHandleCurrentChange(widgetInfo) {
      this.widgetInfo.pageSize = widgetInfo.pageSize
        ? parseInt(widgetInfo.pageSize)
        : this.widgetInfo.pageSize;
      this.widgetInfo.pageNo = widgetInfo.pageNo
        ? parseInt(widgetInfo.pageNo)
        : this.widgetInfo.pageNo;
      this.loadData();
    },
    handleEditPlan(method, planObj) {
      this.dialogFormVisible = true;
      this.plan.unitId = this.facilitiesInData.unitId;
      this.plan.cretedBy = api.getGlobalVal("userObj").id;
      this.optMode = method;
      if ("add" == method) {
        //新增
        this.optTitle = "新增";
        this.plan = { floorId: null };
        this.plan.cretedBy = api.getGlobalVal("userObj").id;
        this.plan.unitId = this.facilitiesInData.unitId;
        this.plan.trialId = this.facilitiesInData.id;
        this.inputDisabled = false;
        this.showSaveOrUpdate = true;
        console.log(this.showSaveOrUpdate);
      } else if ("edit" == method) {
        //编辑
        this.optTitle = "编辑";
        this.getFloorInfo(planObj.buildId, () => {
          this.plan = planObj;
          this.plan.cretedBy = api.getGlobalVal("userObj").id;
          this.plan.trialId = this.facilitiesInData.id;
          this.inputDisabled = false;
          this.showSaveOrUpdate = true;
        });
      } else if ("delete" == method) {
        //删除
        this.dialogFormVisible = false;
        this.deleteHandle(planObj);
      } else {
        //查看
        this.optTitle = "查看";
        this.getFloorInfo(planObj.buildId, () => {
          this.plan = planObj;
          this.plan.cretedBy = api.getGlobalVal("userObj").id;
          this.inputDisabled = true;
          this.showSaveOrUpdate = false;
        });
      }
    },
    //搜索
    search() {
      this.loadData();
    },
    saveOrUpdateForm(formName) {
      //保存或更新操作
      var that = this;
      this.$refs[formName].validate(valid => {
        if (valid) {
          if ("add" == that.optMode) {
            that.isLoading = true;
            api
              .post(
                "/remoteApi/tool/fcroomper/addRecordEnterpriseFcroomperInfo",
                that.plan
              )
              .then(res => {
                that.isLoading = false;
                if (res && res.code === "success") {
                  this.loadData();
                  that.$message({
                    message: "保存成功",
                    type: "success"
                  });
                } else {
                  that.$message({
                    message: "保存失败",
                    type: "error"
                  });
                }
              })
              .catch(err => {
                console.log(err);
                that.isLoading = false;
              });
          } else if ("edit" == that.optMode) {
            that.plan.cretedBy = api.getGlobalVal("userObj").id;
            that.isLoading = true;
            api
              .post(
                "/remoteApi/tool/fcroomper/updateRecordEnterpriseFcroomperInfo",
                that.plan
              )
              .then(res => {
                that.isLoading = false;
                if (res && res.code === "success") {
                  that.$message({
                    message: "更新成功",
                    type: "success"
                  });
                  this.loadData();
                } else {
                  that.$message({
                    message: "更新失败",
                    type: "error"
                  });
                }
              })
              .catch(err => {
                console.log(err);
                that.isLoading = false;
              });
          } else {
            console.log("异常保存或更新模式");
          }
          this.dialogFormVisible = false;
        } else {
          console.log("error submit!!");
          return false;
        }
      });
    },
    deleteHandle(planObj) {
      //删除
      var that = this;
      that.plan = JSON.parse(JSON.stringify(planObj));
      that
        .$confirm("确定要删除吗?", "提示", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning"
        })
        .then(() => {
          that.isLoading = true;
          api
            .post(
              "/remoteApi/tool/fcroomper/deleteRecordEnterpriseFcroomperInfo",
              {
                id: that.plan.id,
                cretedBy: api.getGlobalVal("userObj").id,
                trialId: this.facilitiesInData.id
              }
            )
            .then(res => {
              that.isLoading = false;
              if (res && res.code === "success") {
                that.$message({
                  message: "删除成功",
                  type: "success"
                });
                that.loadData();
              } else {
                that.$message({
                  message: "删除失败",
                  type: "error"
                });
              }
            })
            .catch(err => {
              console.log(err);
              that.isLoading = false;
            });
        })
        .catch(() => {});
    }
  }
};
</script>
<style lang="scss" scoped>
@import "~/assets/css/editArchivesPoint.scss";
</style>

