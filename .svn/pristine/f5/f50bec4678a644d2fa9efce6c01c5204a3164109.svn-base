<template>
   <div class="upload-content-wrapper">
       <div class="upload-content">
           <div style="padding-left: 20px">
               <el-form ref="form" :model="form" :label-position="labelPosition" label-width="100px" class="upload-content-from">
                   <el-form-item label="上传文件:">
                       <el-upload
                               class="upload-demo"
                               drag
                               action="/remoteApi/tool/record/uploadFinishFile"
                               accept="multipart/form-data"
                               :on-remove="handleRemove"
                               :file-list="form.fileList"
                               :on-error="handleAvatarError"
                               :on-success="handleAvatarSuccess"
                               :before-upload="beforeAvatarUpload"
                               :auto-upload="true"
                               :show-file-list="showFileFlag"
                               multiple>
                           <i class="el-icon-upload"></i>
                           <div class="el-upload__text">将文件拖到此处，或<em>点击上传</em></div>
                       </el-upload>
                   </el-form-item>
               </el-form>
           </div>
       </div>
   </div>
</template>
<script>
    import api from '~/config/http';
    export default {
        data() {
            return{
                labelPosition:'top',
                form: {
                    fileList:[],
                },
                dialogFormVisible: false,
                showFileFlag:true,
                unitId:'',
                facilitiesInData:null
            }
        },
        created(){

        },
        mounted() {
           const that = this;
           that.unitId =localStorage.getItem("unitId");
            that.facilitiesInData = that._Storage.getObj("fileItem", "obj");
           that.findFileAll();
        },
        methods:{
            //查询文件列表
            findFileAll(){
                var that = this;
                api.get("/remoteApi/tool/record/findFinishPicturePath?unitId="+that.unitId)
                // api.get("/remoteApi/tool/record/findFinishPicturePath?unitId=NMGHHHT_BGHDJD_20180705")
                    .then(res => {
                        if (res.code === "success") {
                            that.form.fileList = [];
                            Object.keys(res.data).map(key => {
                                that.form.fileList.push({
                                    name: res.data[key],
                                    url: key
                                })
                            })
                            console.log(that.form.fileList)
                        } else {
                            this.$message({
                                type: "warning",
                                message: "错误"
                            });
                        }
                    })
                    .catch(err => {
                        this.$message({
                            type: "warning",
                            message: err
                        });
                    });
            },
            handleRemove(file, fileList) {
                var that = this;
                api.get("/remoteApi/tool/record/withdrawAttachment?url="+file.url)
                    .then(res => {
                        if (res.code === "success") {
                            that.findFileAll();
                        } else {
                            that.findFileAll();
                            this.$message({
                                type: "warning",
                                message: "删除失败"
                            });
                        }
                    })
                    .catch(err => {
                        this.$message({
                            type: "warning",
                            message: err
                        });
                    });
            },
            //上传失败
            handleAvatarError(err, file, fileList) {
                this.$message({
                    message: '上传文件失败失败',
                    type: 'error'
                });
            },
            //上传成功
            handleAvatarSuccess(res, file) {
                const that = this;
                if(res.code == 'success'){
                    that.unitId=JSON.parse(res.data);
                    that.findFileAll();
                    that.showFileFlag = true
                }else{
                    if(!res.data){
                        that.$message({
                            message: '上传文件失败',
                            type: 'error'
                        });
                    }else{
                        that.$message({
                            message: res.data,
                            type: 'error'
                        });
                    }
                    that.showFileFlag = false
                }
            },
            beforeAvatarUpload(file){
            },
        }
    }
</script>
<style lang="scss" scoped>
    .upload-content-wrapper{
        height: calc(100vh - 165px);
        overflow-x: hidden;
        overflow-y: auto;
    }
    .upload-content{
        height:auto;
        width:100%;
        background:#fff;
        text-align: left;
        padding: 5px 0;
        overflow-y: auto;
        .upload-content-from{
            width: 450px;
            .el-upload-list{
                width: 410px;
            }
            .el-form--label-top .el-form-item__label{
                padding: 0;
            }
        }
    }
</style>

