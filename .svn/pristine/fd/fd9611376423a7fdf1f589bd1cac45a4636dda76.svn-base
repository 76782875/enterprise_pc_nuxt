<template>
    <div class="storied-suilding-wrapper">
        <div>
            <el-form label-position="left" inline class="demo-table-expand">
                <el-form-item label="楼栋:">
                    <el-select v-model.trim="formInline.buildId" placeholder="楼栋信息" @change="getFloorInfo">
                        <el-option v-for="item in buildList" :key="item.buildId" :label="item.buildName" :value="item.buildId">
                        </el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label="楼层:">
                    <el-select v-model.trim="formInline.floorId" placeholder="楼层信息">
                        <el-option v-for="item in floorList" :key="item.floorId" :label="item.floorName" :value="item.floorId">
                        </el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label="设备ID:" :label-width="searchFormLabelWidth">
                    <el-input  v-model="formInline.deviceId"></el-input>
                </el-form-item>
                <el-form-item label="设备名称:" :label-width="searchFormLabelWidth">
                    <el-input v-model="formInline.deviceName"></el-input>
                </el-form-item>
                <el-form-item label="设施系统:" :label-width="searchFormLabelWidth">
                    <el-select v-model.trim="formInline.deviceSys" placeholder="设施系统" @change="selectDeviceSys">
                        <el-option v-for="item in deviceSys" :key="item.value" :label="item.label" :value="item.value">
                        </el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label="设施:" :label-width="searchFormLabelWidth">
                    <el-select v-model.trim="formInline.device" placeholder="全部" @change="selectDevice">
                        <el-option v-for="item in optsTemp" :key="item.value" :label="item.label" :value="item.value">
                        </el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label="厂家标识:" :label-width="searchFormLabelWidth">
                    <el-input  v-model="formInline.sourceId"></el-input>
                </el-form-item>
                <el-form-item label="机号:" :label-width="searchFormLabelWidth">
                    <el-input  v-model="formInline.laMake"></el-input>
                </el-form-item>
                <el-form-item label="回路:" :label-width="searchFormLabelWidth">
                    <el-input  v-model="formInline.laLoop"></el-input>
                </el-form-item>
                <el-form-item label="点位:" :label-width="searchFormLabelWidth">
                    <el-input  v-model="formInline.laPoint"></el-input>
                </el-form-item>
                <el-form-item label="用传编码:" :label-width="searchFormLabelWidth">
                    <el-input  v-model="formInline.controlHost"></el-input>
                </el-form-item>
                <el-form-item  class="t-right">
                    <el-button @click="resetBtn" >重置</el-button>
                    <el-button type="primary" @click="loadData">搜索</el-button>
                    <el-button type="success"  @click="dialogShow"  v-if="facilitiesInData.limtShow">导入</el-button>
                    <el-button type="primary"  @click="batchUpdate"  v-if="facilitiesInData.limtShow">批量修改</el-button>
                    <el-button type="warning" @click="handleEditPlan('add')"  v-if="facilitiesInData.limtShow">新增</el-button>
                </el-form-item>
            </el-form>
        </div>
        <div class="notab">
            <el-scrollbar>
                <el-table v-loading="isLoading" :data="tableData" stripe>
                    <el-table-column align="left" min-width="10%" :show-overflow-tooltip="true" pageSize="pageSize" prop="deviceId"
                                     label="设备ID">
                    </el-table-column>
                    <el-table-column align="left" min-width="15%" :show-overflow-tooltip="true" prop="deviceName" label="设备名称">
                    </el-table-column>
                    <el-table-column align="left" min-width="8%" :show-overflow-tooltip="true" prop="buildId" label="楼栋Id">
                    </el-table-column>
                    <el-table-column align="left" min-width="8%" :show-overflow-tooltip="true" prop="floorId" label="楼层Id">
                    </el-table-column>
                    <el-table-column align="left" min-width="5%" :show-overflow-tooltip="true" prop="laMake" label="机号">
                    </el-table-column>
                    <el-table-column align="left" min-width="7%" :show-overflow-tooltip="true" prop="laLoop" label="回路">
                    </el-table-column>
                    <el-table-column align="left" min-width="7%" :show-overflow-tooltip="true" prop="laPoint" label="点位">
                    </el-table-column>
                    <el-table-column align="left" min-width="7%" :show-overflow-tooltip="true" prop="controlHost" label="用传编码">
                    </el-table-column>
                    <el-table-column align="left" min-width="7%" :show-overflow-tooltip="true" prop="stateName" label="状态">
                    </el-table-column>
                    <el-table-column align="center" min-width="15%" label="操作">
                        <template slot-scope="scope">
                            <el-button type="text" @click="handleEditPlan('edit',scope.row)"  v-if="facilitiesInData.limtShow">编辑</el-button>
                            <el-button type="text" @click="handleEditPlan('view',scope.row)">查看</el-button>
                            <el-button type="text" @click="handleEditPlan('delete',scope.row)"  v-if="facilitiesInData.limtShow">删除</el-button>
                        </template>
                    </el-table-column>
                </el-table>
            </el-scrollbar>
            <Pagination :widgetInfo="widgetInfo" v-on:sonHandleCurrentChange="sonHandleCurrentChange" />
        </div>
        <el-dialog :title="optTitle"  :visible.sync="dialogFormVisible">
            <div style="height:400px;overflow-x: hidden;overflow-y: auto;">
                <el-form :model="plan" label-position="left" inline class="demo-table-expand dialog-expand">
                    <el-form-item label="楼栋:" :rules="{
      required: true, message: '楼栋不能为空', trigger: 'blur'}">
                        <el-select :disabled="inputDisabled" v-model.trim="plan.buildId" placeholder="楼栋信息" @change="getFloorInfo" >
                            <el-option v-for="item in buildList" :key="item.buildId" :label="item.buildName" :value="item.buildId">
                            </el-option>
                        </el-select>
                    </el-form-item>
                    <el-form-item label="楼层:" :rules="{
      required: true, message: '楼层不能为空', trigger: 'blur'}">
                        <el-select :disabled="inputDisabled" v-model.trim="plan.floorId" placeholder="楼层信息" @change="getFloorInfoName" >
                            <el-option v-for="item in floorList" :key="item.floorId" :label="item.floorName" :value="item.floorId">
                            </el-option>
                        </el-select>
                    </el-form-item>
                    <el-form-item label="设备名称:" :label-width="formLabelWidth"  :rules="{
      required: true, message: '设备名称不能为空', trigger: 'blur'}">
                        <el-input :disabled="inputDisabled" v-model="plan.deviceName" auto-complete="off" ></el-input>
                    </el-form-item>
                    <el-form-item label="用户信息传输装置:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.controlHost" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item v-if="deviceIdShow" label="设备ID:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.deviceId" auto-complete="off"></el-input>
                    </el-form-item>

                    <el-form-item label="设备地址:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.deviceAddress" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="机号:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.laMake" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="回路:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.laLoop" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="位置:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.laPoint" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="二次码:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.twoCode" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="经度:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.longitude" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="纬度:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.latitude" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="设备类型父ID:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.deviceTypePid" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="设备类型:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.deviceTypeId" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="阈值:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.threshold" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="机号:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.laMake" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="蓝牙ID:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.bluetoothId" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="品牌:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.brand" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="生产日期:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.manufactureDate" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="启用日期:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.enableDate" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="有效期:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.validityDate" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="施工单位:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.constructionUnit" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="清洗期限:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.cleanDeadline" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="历次清洗时间:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.clean_time" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="用电负荷:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.powerLoad" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="供电电压:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.powersupplyVoltage" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="输出功率:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.outputPower" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="供电负荷:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.powersupplyLoad" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="发电功率:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.powerGeneration" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="设计温度:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.designTemperature" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="扬程:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.lift" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="流量:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.flow" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="射程:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.reach" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="有效容积:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.effectiveVolume" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="容量:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.capacity" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="介质:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.media" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="风量:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.blowingRate" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="功率:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.powers" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="载重:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.loads" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="运行速度:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.runningSpeed" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="耐火极限:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.fireEndurance" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="尺寸:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.sizes" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="材质:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.materialQuality" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="风口大小:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.tuyereSize" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="供水来源:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.watersupplySource" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="接口口径:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.interfaceCaliber" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="形式:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.form" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="朝向:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.orientation" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="是否核点:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.isReview" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="备注:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.remark" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="用户信息传输装置的厂家:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.sourceId" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="安装日期:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.installTime" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="是否为C端设备:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.isCTerminal" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="厂家:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.vender" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="地点位置ID:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.locationId" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="百度坐标X:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.mapX" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="百度坐标Y:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.mapY" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="设备报警联系电话:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.alarmCall" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item label="监测对象:" :label-width="formLabelWidth">
                        <el-input :disabled="inputDisabled" v-model="plan.monitoringObject" auto-complete="off"></el-input>
                    </el-form-item>

                </el-form>
                <div v-if="showSaveOrUpdate" slot="footer" class="dialog-footer" style="float: right;">
                    <el-button @click="dialogFormVisible = false">取 消</el-button>
                    <el-button type="primary"  @click="saveOrUpdateForm">确 定</el-button>
                </div>
            </div>
        </el-dialog>
        <el-dialog :visible.sync="visible" title="批量修改" width="480px">
           <div class="plxg-wrap">
               <el-form :model="dynamicValidateForm" ref="dynamicValidateForm" class="demo-dynamic">
                   <el-row v-for="(domain, index) in dynamicValidateForm.domains" :key="index" :gutter="10" class="form-list-wrapper">
                       <el-col :span="9">

                           <el-form-item :key="domain.columnKey" :prop="'domains.' + index + '.columnValue'" :rules="{
                                            required: true, message: '批量修改类型不能为空', trigger: 'change'
                                        }">
                               <el-select v-model.trim="domain.columnValue" placeholder="请选择批量修改字段">
                                   <el-option v-for="(item,index) in columnList" :key="index" :label="item.label" :value="item.value">
                                   </el-option>
                               </el-select>
                           </el-form-item>

                       </el-col>
                       <el-col :span="15">
                           <el-form-item :key="domain.textKey" :prop="'domains.' + index + '.textValue'" :rules="{
                                required: true, message: '该输入框不能为空', trigger: 'blur'
                                }">
                               <el-input v-model="domain.textValue"></el-input>
                           </el-form-item>
                       </el-col>

                   </el-row>
               </el-form>
           </div>
            <span slot="footer" class="dialog-footer dialog-footer-pl">
                 <el-button type="primary" @click="batchSubmitForm('dynamicValidateForm')">提交</el-button>
                 <el-button @click="resetForm('dynamicValidateForm')">重置</el-button>
            </span>
        </el-dialog>
        <el-dialog title="上传" :visible.sync="dialogExcelVisible"   @close="closeDialog"  :close-on-click-modal="false" width="500px">
            <div class="daoru-wrapper">
                <import-upload ref="myChild"
                               v-on:importHandel="setImport"
                               v-bind:uploadVal="uploadVal"></import-upload>
            </div>
        </el-dialog>
    </div>
</template>
<script>
    import api from '~/config/http';
    import Pagination from "~/components/Pagination";
    import importUpload from "~/components/upload/importUpload";
    export default {
        name:'Equipment',
        components:{
            Pagination,
            importUpload
        },
        props:['facilitiesInData'],
        data(){
            return{
                dialogExcelVisible:false,
                uploadVal:{},
                deviceIdShow:false,
                buildList:[],//楼栋
                floorList:[],//楼层
                formInline:{
                    buildId:null,
                    buildName:null,
                    floorId:null,
                    floorName:null,
                    deviceId:null,
                    deviceName:null,
                    deviceTypeIds:null,
                    deviceSys: '00000000',
                    device: '00000000',
                    sourceId:'',
                    laMake:'',
                    laLoop:'',
                    laPoint:'',
                    controlHost:''
                },
                stateList:[
                    {value:'',label:"全部"},
                    {value:'0',label:"在用"},
                    {value:'1',label:"停用"}
                ],
                deviceSys: [{
                    value: '00000000',
                    label: '全部'
                }],
                optsTemp: [{
                    value: '00000000',
                    label: '全部'
                }],
                widgetInfo: {
                    total: null,
                    pageSize: 6,
                    pageNo: 1
                },
                columnList:[],
                tableData: [],
                isLoading: false,
                dialogFormVisible:false,
                plan:{
                    floorId:null
                },
                visible: false,
                dynamicValidateForm: {
                    domains: [{
                        columnKey: '',
                        columnValue: '',
                        textKey: '',
                        textValue: '',
                    }]
                },
                searchFormLabelWidth: '80px',
                formLabelWidth: '100%',
                optTitle:null,
                inputDisabled:false,
                showSaveOrUpdate:false,
                optMode:null,
                ZS: {
                    MONITOR: {}
                }
            }
        },
        mounted() {
            this.findBuildByUnitId();
            this.loadData();
            this.createDeviceTypeSelect();
            this.getColumnList();
        },
        methods:{
            closeDialog(){
                //调用子组件方法
                this.$refs.myChild.ResetOrCloseBtn();
            },
            setImport(){
                this.dialogExcelVisible = false;
                this.loadData();

            },
            dialogShow(){
                this.dialogExcelVisible=true;
                this.uploadVal={
                    fileId: this.facilitiesInData.id,
                    unitId: this.facilitiesInData.unitId,
                    operationOrgId: this.facilitiesInData.subCenterCode,
                    TabName:'设备'
                }
            },
            resetBtn(){
                var that = this;
                var formInline = that.formInline;
                formInline.buildId = null;
                formInline.buildName = null;
                formInline.floorId = null;
                formInline.floorName = null;
                formInline.deviceName = null;
                formInline.deviceId = null;
                formInline.deviceTypeIds = null;
                formInline.deviceSys = '00000000';
                formInline.device = '00000000';
                formInline.sourceId = null;
                formInline.laMake = null;
                formInline.laLoop = null;
                formInline.laPoint = null;
                formInline.controlHost = null;
                that.loadData();
            },
            loadData() {
                this.isLoading = true;
                api.post("/remoteApi/tool/build/findBuildForPage", {
                    unitId: this.facilitiesInData.unitId,
                    buildId: this.buildId,
                    buildName: this.buildName,
                    status:"0",
                    pageNo: this.widgetInfo.pageNo,
                    pageSize: this.widgetInfo.pageSize
                }).then(res => {
                    this.isLoading = false;
                    if (res && res.code === "success") {
                        this.tableData = res.data.rows;
                        this.widgetInfo.total = res.data.total === null ? 0 : res.data.total;
                    } else {
                        this.tableData = [];
                        this.widgetInfo.list = res.data.rows;
                        this.widgetInfo.total = 0;
                        console.log('没有数据')
                    }
                }).catch(err => {
                    this.isLoading = false;
                    this.$message({
                        type: 'warning',
                        message: "加载超时,请重新加载!"
                    });
                });

            },

            //查询单位下面的楼栋信息
            findBuildByUnitId(){
                this.isLoading = true;
                api.post('/remoteApi/tool/build/findBuildByUnitId', {
                    unitId: this.facilitiesInData.unitId
                }).then(res => {
                    this.isLoading = false;
                    if (res && res.code === "success") {
                        this.buildList = res.data;
                    } else {
                        console.log('没有数据')
                    }
                }).catch(err => {
                    this.isLoading = false;
                    this.$message({
                        type: 'warning',
                        message: "加载超时,请重新加载!"
                    });
                });
            },
            //联动楼层信息
            getFloorInfo(buildId, cb) {
                // this.plan.buildName = this.buildList.find(item => {
                //   return item.buildId === buildId;
                // }).buildName;
                this.floorList = null;
                this.formInline.floorId = null;
                this.plan.floorId = null;
                api
                    .post("/remoteApi/tool/floor/getFloorInfoByUnitIdAndBuildId", {
                        unitId: this.facilitiesInData.unitId,
                        buildId: buildId
                    })
                    .then(res => {
                        if (res && res.code === "success") {
                            this.floorList = res.data;
                            if (cb) {
                                cb = cb();
                            }
                        } else {
                            console.log("没有数据");
                        }
                    })
                    .catch(err => {
                        this.isLoading = false;
                        this.$message({
                            type: "warning",
                            message: "加载超时,请重新加载!"
                        });
                    });
            },
            //获取楼层名称
            getFloorInfoName(floorId){
                this.plan.floorName = this.floorList.find((item)=>{
                    return item.floorId === floorId;
                }).floorName;
            },
            getColumnList(){
                this.isLoading = true;
                api.get('/remoteApi/tool/deviceInfo/getUpdateFiled').then(res => {
                    this.isLoading = false;
                    if (res && res.code === "success") {
                        for(let key in res.data) {
                            let obj={};
                            obj.label=res.data[key];
                            obj.value=key;
                            this.columnList.push(obj);
                        }
                    } else {
                        console.log('没有数据')
                    }
                }).catch(err => {
                    this.isLoading = false;
                    this.$message({
                        type: 'warning',
                        message: "加载超时,请重新加载!"
                    });
                });
            },
            loadData() {
                this.isLoading = true;
                api.post('/remoteApi/tool/deviceInfo/findDeviceInfoPage', {
                    unitId: this.facilitiesInData.unitId,
                    buildId: this.formInline.buildId,
                    // buildName: this.formInline.buildName,
                    floorId: this.formInline.floorId,
                    //floorName: this.formInline.floorName,
                    deviceId:this.formInline.deviceId,
                    deviceName:this.formInline.deviceName,
                    deviceTypeIds:this.ZS.MONITOR.deviceQueryType,
                    status:"0",
                    sourceId:this.formInline.sourceId,
                    laMake:this.formInline.laMake,
                    laLoop:this.formInline.laLoop,
                    laPoint:this.formInline.laPoint,
                    controlHost:this.formInline.controlHost,
                    // status:this.formInline.status,
                    pageNo: this.widgetInfo.pageNo,
                    pageSize: this.widgetInfo.pageSize
                }).then(res => {
                    this.isLoading = false;
                    if (res && res.code === "success") {
                        this.tableData = res.data.rows;
                        this.widgetInfo.total = res.data.total === null ? 0 : res.data.total;
                        this.tableData.forEach(item=>{
                            item.stateName=this.stateList.find(stateItem=>stateItem.value==item.status).label;
                        });
                    } else {
                        this.tableData = [];
                        this.widgetInfo.list = res.data.rows;
                        this.widgetInfo.total = 0;
                        console.log('没有数据')
                    }
                }).catch(err => {
                    // console.log(err);
                    this.isLoading = false;
                    this.$message({
                        type: 'warning',
                        message: "加载超时,请重新加载!"
                    });
                });
            },

            // 分页
            sonHandleCurrentChange(widgetInfo) {
                this.widgetInfo.pageSize = (widgetInfo.pageSize ? parseInt(widgetInfo.pageSize) : this.widgetInfo.pageSize);
                this.widgetInfo.pageNo = (widgetInfo.pageNo ? parseInt(widgetInfo.pageNo) : this.widgetInfo.pageNo);
                this.loadData();
            },
            /**
             *  创建设备类型下拉框
             */
            createDeviceTypeSelect: function () {
                var that = this;
                that.ZS.MONITOR.deviceQueryType = '';
                api.post("/remoteApi/tool/deviceInfo/getDeviceTypeInfoList").then(data => {
                    var data = data['data'] || [];
                    that.ZS.MONITOR.deviceType = that.toTreeData(data);
                    // 设备大类
                    if (that.ZS.MONITOR.deviceType[0] != undefined) {
                        var type1Arr = that.ZS.MONITOR.deviceType[0].children;
                        for (var key in type1Arr) {
                            var temp = {};
                            temp.value = type1Arr[key].id;
                            temp.label = type1Arr[key].name;
                            that.deviceSys.push(temp);
                        }
                    }
                })
            },
            /**
             *  设备类型点击事件
             */
            selectDeviceSys: function (val) {
                var that = this;
                that.optsTemp = [{
                    value: '00000000',
                    label: '全部'
                }];

                var params = {
                    unitId: "CKJGQ_20180312",
                    buildId: "CKJGQ_20180312_001",
                    floorId: "CKJGQ_20180312_001_U001",
                    deviceId: "105"
                }

                this.$emit("sendDeviceSysFn", params);

                that.formInline.device = '00000000'

                if (that.ZS.MONITOR.deviceType[0] != undefined) {
                    var type1Arr = that.ZS.MONITOR.deviceType[0].children;
                    for (var key in type1Arr) {
                        if (type1Arr[key].id == val) {
                            var typeStr = ''; //设备类型查询
                            var type2Arr = type1Arr[key].children;
                            for (var key2 in type2Arr) {
                                var temp = {};
                                temp.value = type2Arr[key2].id;
                                temp.label = type2Arr[key2].name;
                                that.optsTemp.push(temp);
                                typeStr = typeStr + ',' + temp.value;
                            }
                            if (typeStr.length > 0) {
                                that.ZS.MONITOR.deviceQueryType = typeStr.substr(1);
                            }
                        }
                    }
                }
            },
            selectDevice: function (val) {
                var that = this;
                if (val == '00000000') {
                    var typeStr = '';
                    for (var key in this.options) {
                        if (this.options[key].value != '00000000') {
                            typeStr = typeStr + ',' + this.options[key].value;
                        }
                    }
                    if (typeStr.length > 0) {
                        that.ZS.MONITOR.deviceQueryType = typeStr.substr(1);
                    }
                } else {
                    that.ZS.MONITOR.deviceQueryType = val;
                }
            },
            /**
             *  将设备类型原始数据转为树形结构
             * @param data
             * @returns {Array}
             * @private
             */
            toTreeData: function (data) {
                var pos = {};
                var tree = [];
                var i = 0;
                while (data.length != 0) {
                    if (data[i].parentid == -1) {
                        tree.push({
                            id: data[i].id,
                            name: data[i].name,
                            children: []
                        });
                        pos[data[i].id] = [tree.length - 1];
                        data.splice(i, 1);
                        i--;
                    } else {
                        var posArr = pos[data[i].parentid];
                        if (posArr != undefined) {

                            var obj = tree[posArr[0]];
                            for (var j = 1; j < posArr.length; j++) {
                                obj = obj.children[posArr[j]];
                            }

                            obj.children.push({
                                id: data[i].id,
                                name: data[i].name,
                                children: []
                            });
                            pos[data[i].id] = posArr.concat([obj.children.length - 1]);
                            data.splice(i, 1);
                            i--;
                        }
                    }
                    i++;
                    if (i > data.length - 1) {
                        i = 0;
                    }
                }
                return tree;
            },
            handleEditPlan(method,planObj){
                this.optMode=method;
                if('add'==method){//新增
                    this.dialogFormVisible = true;
                    this.optTitle="新增";
                    this.plan={
                        floorId:null
                    };
                    this.deviceIdShow = false;
                    this.inputDisabled=false;
                    this.showSaveOrUpdate=true;
                }else if('edit'==method){//编辑
                    this.dialogFormVisible = true;
                    this.deviceIdShow = false;
                    this.optTitle="编辑";
                    this.getFloorInfo(planObj.buildId, () => {
                        this.plan = planObj;
                        this.plan.cretedBy = api.getGlobalVal("userObj").id;
                        this.plan.trialId = this.facilitiesInData.id;
                        this.inputDisabled = false;
                        this.showSaveOrUpdate = true;
                    });
                }else if('delete'==method){
                    //删除
                    this.dialogFormVisible = false;
                    this.deleteHandle(planObj);
                }else{//查看
                    this.dialogFormVisible = true;
                    this.deviceIdShow = true;
                    this.optTitle="查看";

                    this.getFloorInfo(planObj.buildId, () => {
                        this.plan = planObj;
                        this.plan.cretedBy = api.getGlobalVal("userObj").id;
                        this.inputDisabled = true;
                        this.showSaveOrUpdate = false;
                    });
                }
            },
            // viewHandle(planObj){
            //     let that=this;
            //     that.isLoading = true;
            //     api.get("/remoteApi/tool/deviceInfo/getDeviceById",
            //         {
            //             id:planObj.id
            //         }
            //     ).then(res => {
            //         that.isLoading = false;
            //         if (res && res.code === "success") {
            //             that.plan=res.data;
            //         }else{
            //             that.$message({
            //                 message: "获取失败",
            //                 type: "error"
            //             });
            //         }
            //     }).catch(err => {
            //         console.log(err);
            //         that.isLoading = false;
            //     })
            // },
            deleteHandle(planObj){//删除
                var that=this;
                that.plan = JSON.parse(JSON.stringify(planObj));
                that.$confirm('确定要删除吗?', '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(() => {
                    that.isLoading = true;
                    api.post("/remoteApi/tool/deviceInfo/deleteDeviceInfoById",
                        {
                            id:that.plan.id,
                            userId:api.getGlobalVal('userObj').id,
                            trailId:that.facilitiesInData.id
                        }
                    ).then(res => {
                        that.isLoading = false;
                        if (res && res.code === "success") {
                            that.$message({
                                message: "删除成功",
                                type: "success"
                            });
                            that.loadData();

                        } else {
                            that.$message({
                                message: "删除失败",
                                type: "error"
                            });
                        }
                    })
                        .catch(err => {
                            console.log(err);
                            that.isLoading = false;
                        })
                }).catch(() => {});
            },
            saveOrUpdateForm(){//保存或更新操作
                let that=this;
                if('add'==that.optMode){
                    if (that.plan.buildId == '' || that.plan.buildId == null) {
                        that.$message({
                            type: 'warning',
                            message: "请选择楼栋"
                        });
                        return;
                    };
                    if (that.plan.floorId==''  || that.plan.floorId == null) {
                        that.$message({
                            type: 'warning',
                            message: "请选择楼层"
                        });
                        return;
                    };
                    if (that.plan.deviceName=='' || that.plan.deviceName == null) {
                        that.$message({
                            type: 'warning',
                            message: "设备名称不能为空"
                        });
                        return;
                    };
                    that.plan.createUserId= api.getGlobalVal('userObj').id;
                    that.plan.unitId=that.facilitiesInData.unitId;
                    that.plan.trailId = that.facilitiesInData.id;
                    that.isLoading = true;
                    api.post("/remoteApi/tool/deviceInfo/addRecordDevice",that.plan).then(res => {
                        that.isLoading = false;
                        if (res && res.code === "success") {
                            that.dialogFormVisible=false;
                            that.$message({
                                message: "保存成功",
                                type: "success"
                            });
                            that.loadData();

                        } else {
                            that.$message({
                                message: "保存失败",
                                type: "error"
                            });
                        }
                    })
                        .catch(err => {
                            console.log(err);
                            that.isLoading = false;
                        })
                }else if('edit'==that.optMode){
                    if (that.plan.buildId == '' || that.plan.buildId == null) {
                        that.$message({
                            type: 'warning',
                            message: "请选择楼栋"
                        });
                        return;
                    };
                    if (that.plan.floorId==''  || that.plan.floorId == null) {
                        that.$message({
                            type: 'warning',
                            message: "请选择楼层"
                        });
                        return;
                    };
                    if (that.plan.deviceName=='' || that.plan.deviceName == null) {
                        that.$message({
                            type: 'warning',
                            message: "设备名称不能为空"
                        });
                        return;
                    };
                    that.plan.updateUser=api.getGlobalVal('userObj').id;
                    that.plan.unitId=that.facilitiesInData.unitId;
                    that.plan.trailId = that.facilitiesInData.id;
                    that.isLoading = true;
                    api.post("/remoteApi/tool/deviceInfo/updateRecordDeviceByDeviceId",that.plan).then(res => {
                        that.isLoading = false;
                        if (res && res.code === "success") {
                            that.dialogFormVisible=false;
                            that.$message({
                                message: "更新成功",
                                type: "success"
                            });
                            that.loadData();
                        } else {
                            that.$message({
                                message: "更新失败",
                                type: "error"
                            });
                        }
                    })
                        .catch(err => {
                            console.log(err);
                            that.isLoading = false;
                        })
                }else{
                    console.log("异常保存或更新模式")
                }
            },
            batchUpdate(){
                for(let i=0;i<this.dynamicValidateForm.domains.length;i++){
                    if(i>0){
                        this.dynamicValidateForm.domains.splice(i, 1)
                    }else{
                        this.dynamicValidateForm.domains[i].columnKey=null;
                        this.dynamicValidateForm.domains[i].textKey=null;
                        this.dynamicValidateForm.domains[i].columnValue=null;
                        this.dynamicValidateForm.domains[i].textValue=null;
                    }
                };
                this.visible=true;
            },
            //批量修改
            batchSubmitForm(formName) {
                const that=this;
                //数据组装
                let keyValueStr='';
                for(let i=0;i<that.dynamicValidateForm.domains.length;i++){
                    keyValueStr = (that.dynamicValidateForm.domains[i].columnValue +'='+ that.dynamicValidateForm.domains[i].textValue)
                    //keyValueStr[that.dynamicValidateForm.domains[i].columnValue]=that.dynamicValidateForm.domains[i].textValue;
                };
                that.$refs[formName].validate((valid) => {
                    if (valid) {
                        that.isLoading = true;
                        api.post("/remoteApi/tool/deviceInfo/batchUpdateDeviceByCondition",{
                            unitId: this.facilitiesInData.unitId,
                            // unitId:'CKJGQ_20180312',
                            orgCode: this.facilitiesInData.subCenterCode,
                            trialId: this.facilitiesInData.id,
                            buildId: this.formInline.buildId,
                            floorId: this.formInline.floorId,
                            deviceId:this.formInline.deviceId,
                            deviceName:this.formInline.deviceName,
                            deviceTypeIds:this.ZS.MONITOR.deviceQueryType,
                            keyValueStr:keyValueStr,
                            userId:api.getGlobalVal('userObj').id,
                            //新增的五个

                            sourceId:this.formInline.sourceId,
                            laMake:this.formInline.laMake,
                            laLoop:this.formInline.laLoop,
                            laPoint:this.formInline.laPoint,
                            controlHost:this.formInline.controlHost
                            //   controlHost:'32'
                        }).then(res => {
                            that.isLoading = false;
                            if (res && res.code === "success") {
                                that.visible=false;
                                that.$message({
                                    message: "更新成功",
                                    type: "success"
                                });
                                that.loadData();
                            } else {
                                that.$message({
                                    message: res.rspMsg,
                                    type: "error"
                                });
                            }
                        })
                            .catch(err => {
                                console.log(err);
                                that.isLoading = false;
                            })
                    } else {
                        console.log('批量更新校验失败');
                        return false;
                    }
                });
            },
            resetForm(formName) {
                this.$refs[formName].resetFields();
            },
            removeDomain(item) {
                let index = this.dynamicValidateForm.domains.indexOf(item);
                if (index !== -1) {
                    this.dynamicValidateForm.domains.splice(index, 1)
                }
            },
            addDomain() {
                this.dynamicValidateForm.domains.push({
                    columnKey: 'columnKey:' + Date.now(),
                    columnValue: '',
                    textKey: 'textKey:' + Date.now(),
                    textValue: '',

                });
            }
        }
    }
</script>
<style lang="scss" scoped>
    @import "~/assets/css/editArchivesPoint.scss";
    .storied-suilding-wrapper {
        /deep/.demo-table-expand {
            .el-form-item {
                label {
                    width: 80px;
                }
                .el-form-item__content {
                    width: calc(100% - 80px);
                }
                &.t-right .el-form-item__content {
                    width: 100%;
                }
                .el-button+.el-button{
                    margin-left:5px;
                }
            }
        }
        /deep/.el-table {
            .el-table__body-wrapper {
                height: calc(100vh - 90px - 60px - 140px - 95px - 85px);
                overflow: hidden;
                overflow-y: auto;
            }
        }
    }
    .plxg-wrap{
        height: 100px;
        .demo-dynamic{
            height: 100px !important;
            .form-list-wrapper{
                height: 100px !important;
            }
        }
    }


</style>

